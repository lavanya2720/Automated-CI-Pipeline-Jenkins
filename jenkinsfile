pipeline {
  agent any

  tools {
    // If you add NodeJS in Jenkins global tools, reference it here by name
    nodejs "NodeJS_16"
  }

  environment {
    // any env vars, e.g., NPM_TOKEN, or credentials binding
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Install Dependencies') {
      steps {
        sh 'npm ci'           // clean install for CI
      }
    }

    stage('Static Analysis') {
      steps {
        // optional: run eslint (ensure devDependency)
        sh 'npm run lint || true' // make strict if you want to fail on lint
      }
    }

    stage('Unit Tests') {
      steps {
        sh 'npm test -- --ci'
      }
      post {
        always {
          junit 'junit.xml' // if tests produce junit.xml (jest-junit)
          archiveArtifacts artifacts: 'coverage/**', allowEmptyArchive: true
        }
      }
    }

    stage('Build & Package') {
      steps {
        sh 'npm run build'
        sh 'tar -czf artifact.tar.gz -C build .'
      }
    }

    stage('Archive Artifact') {
      steps {
        archiveArtifacts artifacts: 'artifact.tar.gz', fingerprint: true
      }
    }
  }

  post {
    success {
      echo 'Build succeeded!'
      // add notifications (email/slack) here
    }
    failure {
      echo 'Build failed!'
    }
    always {
      cleanWs()
    }
  }
}

